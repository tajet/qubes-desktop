#!/bin/python

import curses
import time 
import subprocess

def init_curses():
    # erzeugen des screens
    stdscr = curses.initscr()
    # verhindern, dass gedrueckte Tasten ausgegeben werden 
    curses.noecho()
    curses.cbreak()
    stdscr.keypad(1)
    # verstecken des cursers
    curses.curs_set(0)
    return stdscr

# aufraeumen der Terminal-Einstellungen von curses
def close_curses(stdscr):
    curses.nocbreak()
    stdscr.keypad(0)
    curses.echo()
    curses.endwin()

def draw_vms(stdscr, fields_to_display, vm_list):
    line = "+---------------------+---------+-------+--------+--------------------+---------------+"
    stdscr.addstr(0,0, line)
    stdscr.addstr(1,0, "| {0:>19} | {1:>7} | {2:>5} | {3:>6} | {4:>18} | {5:>13} |".format(*fields_to_display))
    stdscr.addstr(2,0, line)
    y_offset = 3
    for vm in vm_list:
        if(vm["state"] != "Running"):
            continue
        data =  []
        for f in fields_to_display:
            data.append(vm[f])
        stdscr.addstr(y_offset,0, "| {0:>19} | {1:>7} | {2:>5} | {3:>6} | {4:>18} | {5:>13} |".format(*data))
        y_offset += 1
    stdscr.addstr(y_offset,0, line)

def main():
    
    stdscr = init_curses()
    
    try:
        while(True):
            p1 = subprocess.Popen("qvm-ls", stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)
            output = p1.communicate()
            output = output[0]
            output = output.strip().split("\n")
            
            fields = []
            for f in output[1].split("|"):
                fields.append(f.strip())

            vm_list = []
            for l in output[3:]:
                line = l.split("|")
                vm_data = {}
                for i, f in enumerate(line[:-1]):
                    item = fields[i]
                    vm_data[item] = f.strip()
                vm_list.append(vm_data)
            
            #for f in fields:
            #    l = 0
            #    for vm  in vm_list:
            #        new_l = len(vm[f]) 
            #        if(new_l > l):
            #            l = new_l
            #    f["max_len"] = l

            fields_to_display = ["name", "state", "updbl", "type", "template", "netvm"]
            draw_vms(stdscr, fields_to_display, vm_list)
            stdscr.refresh()
            time.sleep(10)
    except KeyboardInterrupt:
        pass
    except Exception:
        pass
    close_curses(stdscr)
    exit()

if __name__ == "__main__":
    main()
